p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11.8,
margin = margin(0,-15,0,0)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall6.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Country) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Country), "Country"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Country, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Country))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Country",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11.8,
margin = margin(0,-15,0,0)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall6.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Country) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Country), "Country"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Country, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Country))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Country",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11.8,
margin = margin(0,-15,0,1)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall6.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Country) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Country), "Country"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Country, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Country))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Country",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11.8,
margin = margin(0,-15,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall6.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Animal) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Animal), "Animal"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Animal, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Animal))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Animal",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11.8,
margin = margin(0,-15,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall3.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Animal) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Animal), "Animal"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Animal, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Animal))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Animal",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11.6, # 11.8
margin = margin(0,-15,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall3.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Animal) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Animal), "Animal"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Animal, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Animal))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Animal",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11, # 11.8
margin = margin(0,-15,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall3.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Sex) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Sex), "Sex"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Sex, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Sex))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Sex",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11, # 11.8
margin = margin(0,-15,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall2.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Sex) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Sex), "Sex"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Sex, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Sex))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Sex",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11, # 11.8
margin = margin(0,-15,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall6.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Country) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Country), "Country"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Country, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Country))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Country",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11, # 11.8
margin = margin(0,-15,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall6.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Country) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Country), "Country"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Country, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Country))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Country",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11, # 11.8
margin = margin(0,-10,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall6.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Sex) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Sex), "Sex"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Sex, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Sex))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Sex",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11, # 11.8
margin = margin(0,-10,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall2.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
## Overall #####################################################################
dat <- df %>%
group_by(Animal) %>%
summarise(count = n()) %>%
mutate(N = sum(count),
percent = count/sum(count)*100)
dat
n_levels <- length(unique(df[!is.na(dat$Animal), "Animal"]))[1]
p <- ggplot(data = dat,
aes(x = reorder(Animal, percent), y = percent)) # if necessary, use x =
p <- p + geom_bar(stat = "identity",              # fct_rev(fct_infreq(Animal))
width = 0.6,
color = 'black',
fill = 'white',
linewidth = 0.8)
p <- p + geom_text(aes(label = scales::percent(percent/100, accuracy = 1L),
family = 'Roboto'),
stat="identity", hjust = 1.15, size=4)
p <- p + labs(title = "Animal",
subtitle = paste0('N = ', format(dat$N[1], big.mark = ',')))
p <- p + theme_minimal()
p <- p + theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(colour='black',
size = 11, # 11.8
margin = margin(0,-10,0,2)),
plot.margin = margin(r=0, l=0, b=0, t=0),
plot.title = element_text(size = 16.5),
plot.subtitle = element_text(size = 11.7),
panel.grid = element_blank(),
text = element_text(family = 'Roboto'))
p <- p + coord_flip(clip = 'off')
p <- p + theme(aspect.ratio = n_levels/12)
p
ggsave("overall3.svg", path = 'plots_bis/',
bg = 'white',
width = 14, # necessary to override Plot viewer dimensions!
units = "cm"
#height = 1 + 0.4*n_levels
)
